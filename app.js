//so lets make two array to keep matching the sequence which is in the game and which is entered by the user
let gameSeq=[];
let userSeq=[];
//lets also keep the track of the highest score by the user/player
let highest=0;//initially
let h2=document.querySelector("h2");
//now lets keep track of two things that is if the game has started or not and what is the level
let started=false;//initially
let level=0;
//also we have to change the h3 heading always so lets define it 
let h3=document.querySelector("h3");
//now we will start the game by pressing any key so 
document.addEventListener("keydown",()=>{start()});
function start()
{
    //game will only start once so we will check for it also
    if(started==false)
    {
        // console.log("Game has Started.");
        started=true;
        //once the game has started we will level up 
        levelUp();
    }
}
//now we have to level up and flash the buttons 
function levelUp()
{
    level++;
    h3.innerText=`Level ${level}`;
    //now when we have to make a random div blink to make the pattern we will make a random div blink
    let n=Math.floor(Math.random()*4)+1;
    gameSeq.push(n);
    // console.log(gameSeq);
    buttonFlash(`inner${n}`);
    //also we will reset the userSeq
    userSeq.length=0;
}
//we created a function for flashing a div as there will be flashing multiple times in a single process once when the user presses the div and once when we generate a random div to be blinked
//we are making the div blink by removing the last class that is color class from it and adding it again after 500ms as a result of which it gives a idea of being flashed to the user
function buttonFlash(id)
{
    let clickedDiv=document.querySelector(`#${id}`);
    let colorClass=clickedDiv.classList[clickedDiv.classList.length-1];
    clickedDiv.classList.remove(colorClass);
    clickedDiv.classList.add("grows");
    setTimeout(()=>(clickedDiv.classList.remove("grows")),1000);
    setTimeout(()=>(clickedDiv.classList.add(colorClass)),300);
}
//now lets use the concept of event delegation and apply event listener to all the buttons
let outerDiv=document.querySelector(".outer");
outerDiv.addEventListener("click",(event)=>{pressed(event.target.id)});
//now all the work that has to be done after pressing the button will come in this pressed function
function pressed(id)
{
    if(id=="") return;
    // console.log(`div with the id ${id} was pressed`);
    //when the button is pressed the user shall get a feedback that it is pressed so we will blink that div
    userSeq.push(Number(id.slice(-1)));
    // console.log(userSeq);
    buttonFlash(id);
    check(userSeq.length-1);
}
//now we need to check if the user's pattern matches the pattern which is generated by the game in the check function
function check(currIdx)
{
    if(userSeq[currIdx]==gameSeq[currIdx])
    {
        //first case is that we have checked all the previous values so in that case we will levelUp
        if(userSeq.length==gameSeq.length)
            setTimeout(()=>{levelUp()},1000);
    }
    else
    {
        highest=Math.max(highest,level);
        h2.innerText=`Your Highest Score : ${highest}`;
        document.querySelector("body").classList.toggle("red");
        setTimeout(()=>(document.querySelector("body").classList.toggle("red")),150);
        h3.innerText=`Game Over !! Your score is ${level} \nPress any key to start again`;
        level=0;
        started=false;
        gameSeq.length=0;
        userSeq.length=0;
    }
}

//BY LOVE BY PRANAY